class Solution {
public:
    bool checkPalin(string &s){
        int n = s.size();
        for (int i = 0; i < n / 2; i++){
            if(s[i] != s[n - i - 1])return false;
        }
        return true;
    }
    int maxPalindromes(string s, int k) {
        int n = s.size();
        vector <long long> dp(n + 4, 0);
        for (int i = 1; i <= n; i++){
            string temp = "";
            for (int j = i; j >= 1; j--){
                temp.push_back(s[j - 1]);
                if(temp.size() >= k){
                    if(checkPalin(temp)){
                        dp[i] = max(dp[i], 1 + dp[j - 1]);
                        break;
                    }
                }
            }
            dp[i] = max(dp[i], dp[i - 1]);
        }
        return dp[n];
        
    }
};
